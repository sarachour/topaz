#!/usr/bin/python
import matplotlib.pyplot as plt

import sys
from os import listdir
from os.path import isfile, join
import random
import math
from numpy import array
import numpy
import subprocess

total=0.0;
true_accept=0.0;
false_accept=0.0;
true_reject=0.0;
false_reject=0.0;


regions = [];
pts = {'data':{}};




def pct(n,t):
	if(t==0):
		return "div-by-zero"
	return str(round(n/t*100.0,5))+"%";

def calc_length(s,line,n):
	if(line.startswith(s+"\t")):
		return n+1;
	return n;


	
if(len(sys.argv) < 2):
	print "logname task-id"
	exit(1);

 
log = sys.argv[1];
sel_id = int(sys.argv[2]);

flog = open(log);
ssel_id = str(sel_id);
header = flog.readline().split('\t');
print header;

cumerr = {};
for line in flog:
	try:
		fields=line.split('\t')
		id = int(fields[header.index("ID")]);
		
		if(id != sel_id):
			continue;

		oid=float(fields[header.index("OUT-ID")]);
		cpt=float(fields[header.index("CORR-VAL")]);
		ept=float(fields[header.index("VAL")]);
		n = int(float(fields[header.index("n-regions")]));
		
		is_accept = False;
		for i in range(0,n):
			idx=header.index(str(i)+".prob");
			if(idx >= len(fields)):
				continue;
			minx = float(fields[header.index(str(i)+".min")]);
			maxx = float(fields[header.index(str(i)+".max")]);
			if  ept <= maxx and ept >= minx: 
				is_accept = True;
				
		
		if not (oid in cumerr):
			cumerr[oid] = {"total":0.0,"n":0.0};
			
		if is_accept:
			if cpt == 0:
				abs(cpt - ept)*100;
			else:
				err = abs(cpt - ept)/cpt*100;
				
			if err > 0:
				print err
			#print id,oid,corr_val,acc_val,err	
		else:
			err = 0.0
			
		if math.isnan(err) or math.isinf(err) or err > 1e5:
			continue;	
		cumerr[oid]["total"] += err;
		cumerr[oid]["n"] += 1;
	except ValueError:
		print "skipping.."


terr = []
for oid in cumerr:
	c = cumerr[oid]
	err = c["total"]/c["n"]
	terr.append(err);
	print "ELEM",oid,err

err = numpy.mean(terr );

print "TOTAL",err
